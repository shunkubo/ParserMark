
local lpeg = require "lpeg"
local File = lpeg.V"File"
local _ = lpeg.V"_"
local Annotations = lpeg.V"Annotations"
local Annotation = lpeg.V"Annotation"
local QualifiedName = lpeg.V"QualifiedName"
local Identifier = lpeg.V"Identifier"
local ElementValuePair = lpeg.V"ElementValuePair"
local ElementValue = lpeg.V"ElementValue"
local ConditionalExpression = lpeg.V"ConditionalExpression"
local LogicalOrExpression = lpeg.V"LogicalOrExpression"
local LogicalAndExpression = lpeg.V"LogicalAndExpression"
local InclusiveOrExpression = lpeg.V"InclusiveOrExpression"
local ExclusiveOrExpression = lpeg.V"ExclusiveOrExpression"
local AndExpression = lpeg.V"AndExpression"
local EqualityExpression = lpeg.V"EqualityExpression"
local RelationalExpression = lpeg.V"RelationalExpression"
local ShiftExpression = lpeg.V"ShiftExpression"
local AdditiveExpression = lpeg.V"AdditiveExpression"
local MultiplicativeExpression = lpeg.V"MultiplicativeExpression"
local CastNewExpression = lpeg.V"CastNewExpression"
local Type = lpeg.V"Type"
local ReferenceType = lpeg.V"ReferenceType"
local PrimitiveType = lpeg.V"PrimitiveType"
local UnannoPrimitiveType = lpeg.V"UnannoPrimitiveType"
local ClassOrInterfaceType = lpeg.V"ClassOrInterfaceType"
local ClassType = lpeg.V"ClassType"
local SimpleClassType = lpeg.V"SimpleClassType"
local UnannoSimpleClassType = lpeg.V"UnannoSimpleClassType"
local TypeArguments = lpeg.V"TypeArguments"
local TypeArgument = lpeg.V"TypeArgument"
local TypeVariable = lpeg.V"TypeVariable"
local UnaryExpression = lpeg.V"UnaryExpression"
local PostfixExpression = lpeg.V"PostfixExpression"
local DIGITS = lpeg.V"DIGITS"
local EXPONENT = lpeg.V"EXPONENT"
local HEXDIGITS = lpeg.V"HEXDIGITS"
local HEXADECIMAL = lpeg.V"HEXADECIMAL"
local ESCAPE = lpeg.V"ESCAPE"
local This = lpeg.V"This"
local Super = lpeg.V"Super"
local Expression = lpeg.V"Expression"
local MethodParamList = lpeg.V"MethodParamList"
local MethodParam = lpeg.V"MethodParam"
local VariableModifiers = lpeg.V"VariableModifiers"
local VarName = lpeg.V"VarName"
local Block = lpeg.V"Block"
local BlockStatement = lpeg.V"BlockStatement"
local Statement = lpeg.V"Statement"
local CaseBlock = lpeg.V"CaseBlock"
local Expressions = lpeg.V"Expressions"
local VariableDeclaration = lpeg.V"VariableDeclaration"
local Initializer = lpeg.V"Initializer"
local ArrayInitializer = lpeg.V"ArrayInitializer"
local InitDeclList = lpeg.V"InitDeclList"
local InitDecl = lpeg.V"InitDecl"
local Resource = lpeg.V"Resource"
local Catch = lpeg.V"Catch"
local ClassDeclaration = lpeg.V"ClassDeclaration"
local ClassModifiers = lpeg.V"ClassModifiers"
local TypeParameters = lpeg.V"TypeParameters"
local TypeParameter = lpeg.V"TypeParameter"
local UnannoTypeParameter = lpeg.V"UnannoTypeParameter"
local SuperInterfaces = lpeg.V"SuperInterfaces"
local ClassOrInterfaceTypes = lpeg.V"ClassOrInterfaceTypes"
local ClassBody = lpeg.V"ClassBody"
local ClassBodyDeclaration = lpeg.V"ClassBodyDeclaration"
local TypeOrVoid = lpeg.V"TypeOrVoid"
local Throws = lpeg.V"Throws"
local InterfaceDeclaration = lpeg.V"InterfaceDeclaration"
local InterfaceModifiers = lpeg.V"InterfaceModifiers"
local ConstantDeclaration = lpeg.V"ConstantDeclaration"
local addArgumentExpressionList = lpeg.V"addArgumentExpressionList"
local addEnumeratorList = lpeg.V"addEnumeratorList"
local Enumerator = lpeg.V"Enumerator"
local ArgumentExpressionList = lpeg.V"ArgumentExpressionList"
local NonArrayType = lpeg.V"NonArrayType"
G = lpeg.P{ File,
      File = _  *  ( (Annotations ^-1 *  ( lpeg.P"p"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"k"  *  ( lpeg.P"a"  *  ( lpeg.P"g"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( QualifiedName  *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) ) ) ))^-1 *  ( (lpeg.P"i"  *  ( lpeg.P"m"  *  ( lpeg.P"p"  *  ( lpeg.P"o"  *  ( lpeg.P"r"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( (  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"" )  ) *  ( ( QualifiedName  *  (lpeg.P"."  *  ( -(lpeg.P"." ) *  ( _  *  ( lpeg.P"*"  *  ( -(lpeg.P"=" ) *  _  ) ) ) ))^-1 ) *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) ) ))^0 *  ( ( ( ClassDeclaration  )  +  ( InterfaceDeclaration  )  +  ( lpeg.P";"  *  _  ) )^0 *  ( _  *  -(lpeg.P(1)) ) ) ) );
      _ = ( ( lpeg.P'\t'  )  +  ( lpeg.P'\n'  )  +  ( lpeg.P""  )  +  ( lpeg.P""  )  +  ( lpeg.P'\r'  )  +  ( lpeg.P" "  )  +  ( lpeg.P"/"  *  (  ( lpeg.P"*"  *  ( (-(lpeg.P'*/') *  lpeg.P(1))^0 *  ( lpeg.P'*/' ) ) )  +  ( lpeg.P"/"  *  (-(lpeg.P'\n' ) *  lpeg.P(1))^0 )  ) ) )^0;
      Annotations = Annotation ^1;
      Annotation = lpeg.P"@"  *  (  ( _  *  ( QualifiedName  *  ( lpeg.P"("  *  ( _  *  ( (ElementValuePair  *  (lpeg.P","  *  ( _  *  ElementValuePair  ))^0)^-1 *  ( lpeg.P")"  *  _  ) ) ) ) ) )  +  ( _  *  ( QualifiedName  *  ( lpeg.P"("  *  ( _  *  ( ElementValue  *  ( lpeg.P")"  *  _  ) ) ) ) ) )  +  ( _  *  QualifiedName  )  );
      QualifiedName = Identifier  *  (lpeg.P"."  *  ( -(lpeg.P"." ) *  ( _  *  Identifier  ) ))^0;
      Identifier = ( -(lpeg.R("\48\57") ) *  ( -( ( lpeg.P"a"  *  (  ( lpeg.P"b"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"s"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  ) )  +  ( lpeg.P"b"  *  (  ( lpeg.P"o"  *  ( lpeg.P"o"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( lpeg.P"a"  *  ( lpeg.P"n"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"r"  *  ( lpeg.P"e"  *  ( lpeg.P"a"  *  ( lpeg.P"k"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"y"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  ) )  +  ( lpeg.P"c"  *  (  ( lpeg.P"a"  *  ( lpeg.P"s"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  +  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"c"  *  ( lpeg.P"h"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"h"  *  ( lpeg.P"a"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  +  ( lpeg.P"l"  *  ( lpeg.P"a"  *  ( lpeg.P"s"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"o"  *  ( lpeg.P"n"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"o"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"u"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  ) )  +  ( lpeg.P"d"  *  (  ( lpeg.P"e"  *  ( lpeg.P"f"  *  ( lpeg.P"a"  *  ( lpeg.P"u"  *  ( lpeg.P"l"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"o"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"o"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) )  ) )  +  ( lpeg.P"e"  *  (  ( lpeg.P"l"  *  ( lpeg.P"s"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  +  ( lpeg.P"n"  *  ( lpeg.P"u"  *  ( lpeg.P"m"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  +  ( lpeg.P"x"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"d"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  ) )  +  ( lpeg.P"f"  *  (  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( lpeg.P"s"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( lpeg.P"l"  *  ( lpeg.P"y"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"l"  *  ( lpeg.P"o"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"o"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) )  ) )  +  ( lpeg.P"g"  *  ( lpeg.P"o"  *  ( lpeg.P"t"  *  ( lpeg.P"o"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"i"  *  (  ( lpeg.P"f"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) )  +  ( lpeg.P"m"  *  ( lpeg.P"p"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( lpeg.P"m"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"m"  *  ( lpeg.P"p"  *  ( lpeg.P"o"  *  ( lpeg.P"r"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"n"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"n"  *  ( lpeg.P"c"  *  ( lpeg.P"e"  *  ( lpeg.P"o"  *  ( lpeg.P"f"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( lpeg.P"f"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )  +  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) )  ) )  +  ( lpeg.P"l"  *  ( lpeg.P"o"  *  ( lpeg.P"n"  *  ( lpeg.P"g"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"n"  *  (  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"v"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"e"  *  ( lpeg.P"w"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) )  +  ( lpeg.P"u"  *  ( lpeg.P"l"  *  ( lpeg.P"l"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  ) )  +  ( lpeg.P"p"  *  (  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"k"  *  ( lpeg.P"a"  *  ( lpeg.P"g"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"v"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )  +  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  ) )  +  ( lpeg.P"r"  *  ( lpeg.P"e"  *  ( lpeg.P"t"  *  ( lpeg.P"u"  *  ( lpeg.P"r"  *  ( lpeg.P"n"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  (  ( lpeg.P"h"  *  ( lpeg.P"o"  *  ( lpeg.P"r"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"f"  *  ( lpeg.P"p"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  +  ( lpeg.P"u"  *  ( lpeg.P"p"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"w"  *  ( lpeg.P"i"  *  ( lpeg.P"t"  *  ( lpeg.P"c"  *  ( lpeg.P"h"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"y"  *  ( lpeg.P"n"  *  ( lpeg.P"c"  *  ( lpeg.P"h"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"n"  *  ( lpeg.P"i"  *  ( lpeg.P"z"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) ) ) )  ) )  +  ( lpeg.P"t"  *  (  ( lpeg.P"h"  *  ( lpeg.P"i"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  +  ( lpeg.P"h"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"w"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"h"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"w"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"r"  *  ( lpeg.P"a"  *  ( lpeg.P"n"  *  ( lpeg.P"s"  *  ( lpeg.P"i"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )  +  ( lpeg.P"r"  *  ( lpeg.P"u"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  +  ( lpeg.P"r"  *  ( lpeg.P"y"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) )  ) )  +  ( lpeg.P"v"  *  (  ( lpeg.P"o"  *  ( lpeg.P"i"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  +  ( lpeg.P"o"  *  ( lpeg.P"l"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  ) )  +  ( lpeg.P"w"  *  ( lpeg.P"h"  *  ( lpeg.P"i"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) *  (lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") )^1 ) ) *  _ ;
      ElementValuePair = Identifier  *  ( lpeg.P"="  *  ( -(lpeg.P"=" ) *  ( _  *  ElementValue  ) ) );
      ElementValue = lpeg.P"{"  *  ( _  *  ( (ElementValue  *  (lpeg.P","  *  ( _  *  ElementValue  ))^0)^-1 *  ( (lpeg.P","  *  _ )^-1 *  ( lpeg.P"}"  *  _  ) ) ) ) + ConditionalExpression  + Annotation ;
      ConditionalExpression = LogicalOrExpression  *  (lpeg.P"?"  *  ( _  *  ( Expression  *  ( lpeg.P":"  *  ( -(lpeg.P":" + lpeg.P">" ) *  ( _  *  LogicalOrExpression  ) ) ) ) ))^0;
      LogicalOrExpression = LogicalAndExpression  *  (lpeg.P"|"  *  ( lpeg.P"|"  *  ( _  *  LogicalAndExpression  ) ))^0;
      LogicalAndExpression = InclusiveOrExpression  *  (lpeg.P"&"  *  ( lpeg.P"&"  *  ( _  *  InclusiveOrExpression  ) ))^0;
      InclusiveOrExpression = ExclusiveOrExpression  *  (lpeg.P"|"  *  ( -(lpeg.P"=" + lpeg.P"|" ) *  ( _  *  ExclusiveOrExpression  ) ))^0;
      ExclusiveOrExpression = AndExpression  *  (lpeg.P"^"  *  ( -(lpeg.P"=" ) *  ( _  *  AndExpression  ) ))^0;
      AndExpression = EqualityExpression  *  (lpeg.P"&"  *  ( -(lpeg.P"&" + lpeg.P"=" ) *  ( _  *  EqualityExpression  ) ))^0;
      EqualityExpression = RelationalExpression  *  ((  ( lpeg.P"!"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P"="  *  ( lpeg.P"="  *  _  ) )  ) *  RelationalExpression )^0;
      RelationalExpression = ShiftExpression  *  ( ( lpeg.P"<"  *  (  ( lpeg.P"="  *  ( _  *  ShiftExpression  ) )  +  ( -(lpeg.P"=" ) *  ( _  *  ShiftExpression  ) )  ) )  +  ( lpeg.P">"  *  (  ( lpeg.P"="  *  ( _  *  ShiftExpression  ) )  +  ( -(lpeg.P"=" ) *  ( _  *  ShiftExpression  ) )  ) )  +  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"n"  *  ( lpeg.P"c"  *  ( lpeg.P"e"  *  ( lpeg.P"o"  *  ( lpeg.P"f"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ReferenceType  ) ) ) ) ) ) ) ) ) ) ) ) )^0;
      ShiftExpression = AdditiveExpression  *  ((  ( lpeg.P"<"  *  ( lpeg.P"<"  *  ( -(lpeg.P"=" ) *  _  ) ) )  +  ( lpeg.P">"  *  (  ( lpeg.P">"  *  ( -(lpeg.R("\61\62") ) *  _  ) )  +  ( lpeg.P">"  *  ( lpeg.P">"  *  ( -(lpeg.P"=" ) *  _  ) ) )  ) )  ) *  AdditiveExpression )^0;
      AdditiveExpression = MultiplicativeExpression  *  ((  ( lpeg.P"+"  *  ( -(lpeg.P"+" + lpeg.P"=" ) *  _  ) )  +  ( lpeg.P"-"  *  ( -(lpeg.P"-" + lpeg.R("\61\62") ) *  _  ) )  ) *  MultiplicativeExpression )^0;
      MultiplicativeExpression = CastNewExpression  *  ((  ( lpeg.P"%"  *  ( -(lpeg.R("\61\62") ) *  _  ) )  +  ( lpeg.P"*"  *  ( -(lpeg.P"=" ) *  _  ) )  +  ( lpeg.P"/"  *  ( -(lpeg.P"=" ) *  _  ) )  ) *  CastNewExpression )^0;
      CastNewExpression = lpeg.P"("  *  ( _  *  ( Type  *  ( lpeg.P")"  *  ( _  *  CastNewExpression  ) ) ) ) + UnaryExpression ;
      Type = ReferenceType  + PrimitiveType ;
      ReferenceType = (  ( PrimitiveType  )  +  ( ClassOrInterfaceType  )  +  ( TypeVariable  )  ) *  (Annotations ^-1 *  ( lpeg.P"["  *  ( _  *  ( lpeg.P"]"  *  _  ) ) ))^1 + ClassOrInterfaceType  + TypeVariable ;
      PrimitiveType = Annotations  *  UnannoPrimitiveType  + UnannoPrimitiveType ;
      UnannoPrimitiveType = lpeg.P"b"  *  (  ( lpeg.P"y"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  +  ( lpeg.P"o"  *  ( lpeg.P"o"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( lpeg.P"a"  *  ( lpeg.P"n"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  ) + lpeg.P"c"  *  ( lpeg.P"h"  *  ( lpeg.P"a"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) + lpeg.P"d"  *  ( lpeg.P"o"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) + lpeg.P"f"  *  ( lpeg.P"l"  *  ( lpeg.P"o"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) + lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) + lpeg.P"l"  *  ( lpeg.P"o"  *  ( lpeg.P"n"  *  ( lpeg.P"g"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) + lpeg.P"s"  *  ( lpeg.P"h"  *  ( lpeg.P"o"  *  ( lpeg.P"r"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) );
      ClassOrInterfaceType = ClassType  + ClassType ;
      ClassType = SimpleClassType  *  (lpeg.P"."  *  ( -(lpeg.P"." ) *  ( _  *  SimpleClassType  ) ))^0;
      SimpleClassType = Annotations  *  UnannoSimpleClassType  + UnannoSimpleClassType ;
      UnannoSimpleClassType = Identifier  *  TypeArguments ^-1;
      TypeArguments = lpeg.P"<"  *  ( -(lpeg.P"=" ) *  ( _  *  ( (TypeArgument  *  (lpeg.P","  *  ( _  *  TypeArgument  ))^0)^-1 *  ( lpeg.P">"  *  ( -(lpeg.P"=" ) *  _  ) ) ) ) );
      TypeArgument = ReferenceType  + Annotations ^-1 *  ( lpeg.P"?"  *  ( _  *  ((  ( lpeg.P"e"  *  ( lpeg.P"x"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"d"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"u"  *  ( lpeg.P"p"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  ) *  ReferenceType )^-1 ) );
      TypeVariable = Annotations  *  Identifier  + Identifier ;
      UnaryExpression = PostfixExpression  + lpeg.P"+"  *  ( lpeg.P"+"  *  ( _  *  UnaryExpression  ) ) + lpeg.P"-"  *  ( lpeg.P"-"  *  ( _  *  UnaryExpression  ) ) + lpeg.P"+"  *  ( -(lpeg.P"+" + lpeg.P"=" ) *  ( _  *  CastNewExpression  ) ) + lpeg.P"-"  *  ( -(lpeg.P"-" + lpeg.R("\61\62") ) *  ( _  *  CastNewExpression  ) ) + lpeg.P"~"  *  ( _  *  CastNewExpression  ) + lpeg.P"!"  *  ( -(lpeg.P"=" ) *  ( _  *  CastNewExpression  ) );
      PostfixExpression = (  ( (  ( (  ( lpeg.P"."  *  DIGITS  )  +  ( DIGITS  *  ( lpeg.P"."  *  DIGITS ^-1 ) )  ) *  EXPONENT ^-1 )  +  ( DIGITS  *  EXPONENT  )  +  ( (  ( lpeg.P"0"  *  ( lpeg.P"X" + lpeg.P"x"  *  ( lpeg.P"."  *  HEXDIGITS  ) ) )  +  ( HEXADECIMAL  *  (lpeg.P"."  *  HEXDIGITS ^-1)^-1 )  ) *  ( lpeg.P"P" + lpeg.P"p"  *  ( (lpeg.P"+" + lpeg.P"-" )^-1 *  DIGITS  ) ) )  ) *  ( (  ( lpeg.P"F" + lpeg.P"f"  )  +  ( (lpeg.P"D" + lpeg.P"d" )^-1 )  ) *  _  ) )  +  ( DIGITS  *  ( lpeg.P"D" + lpeg.P"F" + lpeg.P"d" + lpeg.P"f"  *  _  ) )  +  ( (  ( lpeg.P"0"  *  -(lpeg.R("\48\57") + lpeg.P"B" + lpeg.P"X" + lpeg.P"_" + lpeg.P"b" + lpeg.P"x" ) )  +  ( -(lpeg.P"0" ) *  DIGITS  )  +  ( HEXADECIMAL  )  +  ( lpeg.P"0"  *  ( lpeg.P"B" + lpeg.P"b"  *  ( lpeg.R("\48\49")  *  ((lpeg.P"_" )^0 *  lpeg.R("\48\49") )^0 ) ) )  +  ( lpeg.P"0"  *  ((lpeg.P"_" )^0 *  lpeg.R("\48\55") )^0 )  ) *  ( (  ( lpeg.P"L" + lpeg.P"l"  )  +  ( lpeg.P"" )  ) *  _  ) )  +  ( lpeg.P"f"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( lpeg.P"s"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"u"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( lpeg.P"'"  *  ( (  ( ESCAPE  )  +  ( -(lpeg.P'\n' + lpeg.P"'" + lpeg.P'\\' ) *  lpeg.P(1) )  ) *  ( lpeg.P"'"  *  _  ) ) )  +  ( lpeg.P"\""  *  ( ( ( ESCAPE  )  +  ( -(lpeg.P'\n' + lpeg.P"\"" + lpeg.P'\\' ) *  lpeg.P(1) ) )^0 *  ( lpeg.P"\""  *  _  ) ) )  +  ( lpeg.P"n"  *  ( lpeg.P"u"  *  ( lpeg.P"l"  *  ( lpeg.P"l"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) )  +  ( This  )  +  ( Super  )  +  ( lpeg.P"("  *  ( _  *  ( Expression  *  ( lpeg.P")"  *  _  ) ) ) )  +  ( TypeOrVoid  *  ( lpeg.P"."  *  ( -(lpeg.P"." ) *  ( _  *  ( lpeg.P"c"  *  ( lpeg.P"l"  *  ( lpeg.P"a"  *  ( lpeg.P"s"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( QualifiedName  *  ( lpeg.P"."  *  ( -(lpeg.P"." ) *  ( _  *  ( lpeg.P"t"  *  ( lpeg.P"h"  *  ( lpeg.P"i"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )  +  ( QualifiedName  *  ( lpeg.P"."  *  ( -(lpeg.P"." ) *  ( _  *  ( lpeg.P"s"  *  ( lpeg.P"u"  *  ( lpeg.P"p"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( Identifier  *  ArgumentExpressionList  )  +  ( lpeg.P"n"  *  ( lpeg.P"e"  *  ( lpeg.P"w"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( TypeArguments ^-1 *  ( Annotations ^-1 *  ( ClassOrInterfaceType  *  ( ArgumentExpressionList  *  ClassBody ^-1 ) ) ) ) ) ) ) ) )  +  ( lpeg.P"n"  *  (  ( lpeg.P"e"  *  ( lpeg.P"w"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Annotations ^-1 *  ( NonArrayType  *  ( (Annotations ^-1 *  ( lpeg.P"["  *  ( _  *  ( Expression  *  ( lpeg.P"]"  *  _  ) ) ) ))^1 *  (Annotations ^-1 *  ( lpeg.P"["  *  ( _  *  ( lpeg.P"]"  *  _  ) ) ))^0 ) ) ) ) ) ) )  +  ( lpeg.P"e"  *  ( lpeg.P"w"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Annotations ^-1 *  ( NonArrayType  *  ( (Annotations ^-1 *  ( lpeg.P"["  *  ( _  *  ( lpeg.P"]"  *  _  ) ) ))^1 *  ArrayInitializer  ) ) ) ) ) ) )  ) )  +  ( ReferenceType  *  ( lpeg.P":"  *  ( lpeg.P":"  *  ( _  *  ( TypeArguments ^-1 *  (  ( Identifier  )  +  ( lpeg.P"n"  *  ( lpeg.P"e"  *  ( lpeg.P"w"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) )  ) ) ) ) ) )  +  ( Identifier  )  ) *  ( ( lpeg.P"+"  *  ( lpeg.P"+"  *  _  ) )  +  ( lpeg.P"-"  *  ( lpeg.P"-"  *  _  ) )  +  ( lpeg.P"."  *  (  ( -(lpeg.P"." ) *  ( _  *  ( TypeArguments ^-1 *  ( Identifier  *  ArgumentExpressionList  ) ) ) )  +  ( -(lpeg.P"." ) *  ( _  *  ( lpeg.P"n"  *  ( lpeg.P"e"  *  ( lpeg.P"w"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( TypeArguments ^-1 *  ( Annotations ^-1 *  ( ClassOrInterfaceType  *  ( ArgumentExpressionList  *  ClassBody ^-1 ) ) ) ) ) ) ) ) ) ) )  +  ( -(lpeg.P"." ) *  ( _  *  ( Identifier  *  -(lpeg.P"(" ) ) ) )  ) )  +  ( lpeg.P":"  *  ( lpeg.P":"  *  ( _  *  ( TypeArguments ^-1 *  Identifier  ) ) ) )  +  ( lpeg.P"["  *  ( _  *  ( Expression  *  ( lpeg.P"]"  *  _  ) ) ) ) )^0;
      DIGITS = lpeg.R("\48\57")  *  ((lpeg.P"_" )^0 *  lpeg.R("\48\57") )^0;
      EXPONENT = lpeg.P"E" + lpeg.P"e"  *  ( (lpeg.P"+" + lpeg.P"-" )^-1 *  DIGITS  );
      HEXDIGITS = lpeg.R("\48\57") + lpeg.R("\65\70") + lpeg.R("\97\102")  *  ((lpeg.P"_" )^0 *  lpeg.R("\48\57") + lpeg.R("\65\70") + lpeg.R("\97\102") )^0;
      HEXADECIMAL = lpeg.P"0"  *  ( lpeg.P"X" + lpeg.P"x"  *  HEXDIGITS  );
      ESCAPE = lpeg.P'\\'  *  (  ( lpeg.P"\"" + lpeg.P"'" + lpeg.P'\\' + lpeg.P"b" + lpeg.P"f" + lpeg.P"n" + lpeg.P"r" + lpeg.P"t"  )  +  ( lpeg.R("\48\51")  *  ( lpeg.R("\48\55")  *  lpeg.R("\48\55")  ) )  +  ( lpeg.R("\48\55")  *  lpeg.R("\48\55")  )  +  ( lpeg.R("\48\55")  )  +  ( (lpeg.P"u" )^1 *  ( lpeg.R("\48\57") + lpeg.R("\65\70") + lpeg.R("\97\102")  *  ( lpeg.R("\48\57") + lpeg.R("\65\70") + lpeg.R("\97\102")  *  ( lpeg.R("\48\57") + lpeg.R("\65\70") + lpeg.R("\97\102")  *  lpeg.R("\48\57") + lpeg.R("\65\70") + lpeg.R("\97\102")  ) ) ) )  );
      This = lpeg.P"t"  *  ( lpeg.P"h"  *  ( lpeg.P"i"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) );
      Super = lpeg.P"s"  *  ( lpeg.P"u"  *  ( lpeg.P"p"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) );
      Expression = (  ( Identifier  )  +  ( lpeg.P"("  *  ( _  *  ( MethodParamList  *  ( lpeg.P")"  *  _  ) ) ) )  +  ( lpeg.P"("  *  ( _  *  ( ( Identifier  *  (lpeg.P","  *  ( _  *  Identifier  ))^0 ) *  ( lpeg.P")"  *  _  ) ) ) )  ) *  ( lpeg.P"-"  *  ( lpeg.P">"  *  ( _  *  (  ( -(lpeg.P"{" ) *  Expression  )  +  ( Block  )  ) ) ) ) + UnaryExpression  *  ( (  ( lpeg.P"%"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P"&"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P"*"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P"+"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P"-"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P"/"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P"<"  *  ( lpeg.P"<"  *  ( lpeg.P"="  *  _  ) ) )  +  ( lpeg.P"="  *  ( -(lpeg.P"=" ) *  _  ) )  +  ( lpeg.P">"  *  (  ( lpeg.P">"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P">"  *  ( lpeg.P">"  *  ( lpeg.P"="  *  _  ) ) )  ) )  +  ( lpeg.P"^"  *  ( lpeg.P"="  *  _  ) )  +  ( lpeg.P"|"  *  ( lpeg.P"="  *  _  ) )  ) *  Expression  ) + ConditionalExpression ;
      MethodParamList = (MethodParam  *  ( lpeg.P","  *  _  ))^0 *  ( VariableModifiers ^-1 *  ( Type  *  ( lpeg.P"."  *  ( lpeg.P"."  *  ( lpeg.P"."  *  ( _  *  VarName  ) ) ) ) ) ) + (MethodParam  *  (lpeg.P","  *  ( _  *  MethodParam  ))^0)^-1;
      MethodParam = VariableModifiers ^-1 *  ( Type  *  VarName  );
      VariableModifiers = ( ( Annotation  )  +  ( lpeg.P"f"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )^1;
      VarName = Identifier  *  (lpeg.P"["  *  ( _  *  ( ConditionalExpression ^-1 *  ( lpeg.P"]"  *  _  ) ) ))^0;
      Block = lpeg.P"{"  *  ( _  *  ( BlockStatement ^0 *  ( lpeg.P"}"  *  _  ) ) );
      BlockStatement = Statement  + VariableDeclaration  *  ( lpeg.P";"  *  _  ) + ClassDeclaration ;
      Statement = Block  + lpeg.P"a"  *  ( lpeg.P"s"  *  ( lpeg.P"s"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Expression  *  ( (lpeg.P":"  *  ( -(lpeg.P":" + lpeg.P">" ) *  ( _  *  Expression  ) ))^-1 *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) ) ) + lpeg.P"i"  *  ( lpeg.P"f"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( Expression  *  ( lpeg.P")"  *  ( _  *  ( Statement  *  (lpeg.P"e"  *  ( lpeg.P"l"  *  ( lpeg.P"s"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  Statement  ) ) ) ) ))^-1 ) ) ) ) ) ) ) ) ) + lpeg.P"s"  *  ( lpeg.P"w"  *  ( lpeg.P"i"  *  ( lpeg.P"t"  *  ( lpeg.P"c"  *  ( lpeg.P"h"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( Expression  *  ( lpeg.P")"  *  ( _  *  ( lpeg.P"{"  *  ( _  *  ( ( ( lpeg.P"c"  *  ( lpeg.P"a"  *  ( lpeg.P"s"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( ConditionalExpression  *  ( lpeg.P":"  *  ( -(lpeg.P":" + lpeg.P">" ) *  ( _  *  CaseBlock  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"d"  *  ( lpeg.P"e"  *  ( lpeg.P"f"  *  ( lpeg.P"a"  *  ( lpeg.P"u"  *  ( lpeg.P"l"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P":"  *  ( -(lpeg.P":" + lpeg.P">" ) *  ( _  *  CaseBlock  ) ) ) ) ) ) ) ) ) ) ) ) )^1 *  ( lpeg.P"}"  *  _  ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) + lpeg.P"w"  *  ( lpeg.P"h"  *  ( lpeg.P"i"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( Expression  *  ( lpeg.P")"  *  ( _  *  Statement  ) ) ) ) ) ) ) ) ) ) ) + lpeg.P"d"  *  ( lpeg.P"o"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Statement  *  ( lpeg.P"w"  *  ( lpeg.P"h"  *  ( lpeg.P"i"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( Expression  *  ( lpeg.P")"  *  ( _  *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) + lpeg.P"f"  *  ( lpeg.P"o"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( Expressions ^-1 *  ( lpeg.P";"  *  ( _  *  ( Expression ^-1 *  ( lpeg.P";"  *  ( _  *  ( Expressions ^-1 *  ( lpeg.P")"  *  ( _  *  Statement  ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) + lpeg.P"f"  *  ( lpeg.P"o"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( VariableDeclaration  *  ( lpeg.P";"  *  ( _  *  ( Expression ^-1 *  ( lpeg.P";"  *  ( _  *  ( Expressions ^-1 *  ( lpeg.P")"  *  ( _  *  Statement  ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) + lpeg.P"f"  *  ( lpeg.P"o"  *  ( lpeg.P"r"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( VariableModifiers ^-1 *  ( Type  *  ( Identifier  *  ( lpeg.P":"  *  ( -(lpeg.P":" + lpeg.P">" ) *  ( _  *  ( Expression  *  ( lpeg.P")"  *  ( _  *  Statement  ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) + lpeg.P"c"  *  ( lpeg.P"o"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"u"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Identifier ^-1 *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) ) ) ) + lpeg.P"b"  *  ( lpeg.P"r"  *  ( lpeg.P"e"  *  ( lpeg.P"a"  *  ( lpeg.P"k"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Identifier ^-1 *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) + lpeg.P"r"  *  ( lpeg.P"e"  *  ( lpeg.P"t"  *  ( lpeg.P"u"  *  ( lpeg.P"r"  *  ( lpeg.P"n"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Expression ^-1 *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) ) + lpeg.P"t"  *  (  ( lpeg.P"r"  *  ( lpeg.P"y"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( ( lpeg.P"("  *  ( _  *  ( Resource  *  ( (lpeg.P";"  *  ( _  *  Resource  ))^0 *  ( (lpeg.P";"  *  _ )^-1 *  ( lpeg.P")"  *  _  ) ) ) ) ) ) *  ( Block  *  ( Catch ^0 *  (lpeg.P"f"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( lpeg.P"l"  *  ( lpeg.P"y"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  Block  ) ) ) ) ) ) ) ))^-1 ) ) ) ) ) ) )  +  ( lpeg.P"r"  *  ( lpeg.P"y"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Block  *  ( Catch ^0 *  ( lpeg.P"f"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( lpeg.P"l"  *  ( lpeg.P"y"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  Block  ) ) ) ) ) ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"r"  *  ( lpeg.P"y"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Block  *  Catch ^1 ) ) ) ) )  ) + lpeg.P"t"  *  ( lpeg.P"h"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"w"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Expression  *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) + lpeg.P"s"  *  ( lpeg.P"y"  *  ( lpeg.P"n"  *  ( lpeg.P"c"  *  ( lpeg.P"h"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"n"  *  ( lpeg.P"i"  *  ( lpeg.P"z"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( Expression  *  ( lpeg.P")"  *  ( _  *  Block  ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) + Identifier  *  ( lpeg.P":"  *  ( -(lpeg.P":" + lpeg.P">" ) *  _  ) ) + Expression  *  ( lpeg.P";"  *  _  ) + lpeg.P";"  *  _ ;
      CaseBlock = BlockStatement ^0;
      Expressions = Expression  *  (lpeg.P","  *  ( _  *  Expression  ))^0;
      VariableDeclaration = VariableModifiers ^-1 *  ( Type  *  (  ( VarName  *  ( (lpeg.P"="  *  ( -(lpeg.P"=" ) *  ( _  *  Initializer  ) ))^-1 *  -(lpeg.P"," ) ) )  +  ( InitDeclList  )  ) );
      Initializer = Expression  + ArrayInitializer ;
      ArrayInitializer = lpeg.P"{"  *  ( _  *  ( (Initializer  *  (lpeg.P","  *  ( _  *  Initializer  ))^0)^-1 *  ( (lpeg.P","  *  _ )^-1 *  ( lpeg.P"}"  *  _  ) ) ) );
      InitDeclList = InitDecl  *  (lpeg.P","  *  ( _  *  InitDecl  ))^0;
      InitDecl = VarName  *  (lpeg.P"="  *  ( -(lpeg.P"=" ) *  ( _  *  Initializer  ) ))^-1;
      Resource = VariableModifiers ^-1 *  ( Type  *  ( Identifier  *  ( lpeg.P"="  *  ( -(lpeg.P"=" ) *  ( _  *  Expression  ) ) ) ) );
      Catch = lpeg.P"c"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"c"  *  ( lpeg.P"h"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( lpeg.P"("  *  ( _  *  ( (  ( VariableModifiers ^-1 *  ( ClassOrInterfaceType  *  Identifier  ) )  +  ( VariableModifiers ^-1 *  ( ClassOrInterfaceType  *  ( (lpeg.P"|"  *  ( -(lpeg.P"=" + lpeg.P"|" ) *  ( _  *  ClassOrInterfaceType  ) ))^1 *  Identifier  ) ) )  ) *  ( lpeg.P")"  *  ( _  *  Block  ) ) ) ) ) ) ) ) ) ) );
      ClassDeclaration = ClassModifiers ^-1 *  ( lpeg.P"c"  *  ( lpeg.P"l"  *  ( lpeg.P"a"  *  ( lpeg.P"s"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Identifier  *  ( TypeParameters ^-1 *  ( (lpeg.P"e"  *  ( lpeg.P"x"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"d"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ClassOrInterfaceType  ) ) ) ) ) ) ) ))^-1 *  ( SuperInterfaces ^-1 *  ClassBody  ) ) ) ) ) ) ) ) ) ) ) + ClassModifiers ^-1 *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"u"  *  ( lpeg.P"m"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Identifier  *  ( SuperInterfaces ^-1 *  ( lpeg.P"{"  *  (  ( _  *  ( addEnumeratorList ^-1 *  ( (lpeg.P","  *  _ )^-1 *  ( lpeg.P";"  *  ( _  *  ( ClassBodyDeclaration ^1 *  ( lpeg.P"}"  *  _  ) ) ) ) ) ) )  +  ( _  *  ( addEnumeratorList ^-1 *  ( (lpeg.P","  *  _ )^-1 *  ( (lpeg.P";"  *  _ )^-1 *  ( lpeg.P"}"  *  _  ) ) ) ) )  ) ) ) ) ) ) ) ) ) );
      ClassModifiers = ( ( Annotation  )  +  ( lpeg.P"p"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"v"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  +  ( lpeg.P"a"  *  ( lpeg.P"b"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )  +  ( lpeg.P"f"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"f"  *  ( lpeg.P"p"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )^1;
      TypeParameters = lpeg.P"<"  *  ( -(lpeg.P"=" ) *  ( _  *  ( TypeParameter  *  ( (lpeg.P","  *  ( _  *  TypeParameter  ))^0 *  ( lpeg.P">"  *  ( -(lpeg.P"=" ) *  _  ) ) ) ) ) );
      TypeParameter = Annotations  *  UnannoTypeParameter  + UnannoTypeParameter ;
      UnannoTypeParameter = Identifier  *  (lpeg.P"e"  *  ( lpeg.P"x"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"d"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( ClassOrInterfaceType  *  (lpeg.P"&"  *  ( -(lpeg.P"&" + lpeg.P"=" ) *  ( _  *  ClassType  ) ))^0 ) ) ) ) ) ) ) ) ))^-1;
      SuperInterfaces = lpeg.P"i"  *  ( lpeg.P"m"  *  ( lpeg.P"p"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( lpeg.P"m"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ClassOrInterfaceTypes  ) ) ) ) ) ) ) ) ) ) );
      ClassOrInterfaceTypes = ClassOrInterfaceType  *  (lpeg.P","  *  ( _  *  ClassOrInterfaceType  ))^0;
      ClassBody = lpeg.P"{"  *  ( _  *  ( ClassBodyDeclaration ^0 *  ( lpeg.P"}"  *  _  ) ) );
      ClassBodyDeclaration = (( ( Annotation  )  +  ( lpeg.P"p"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"v"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  +  ( lpeg.P"f"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"a"  *  ( lpeg.P"n"  *  ( lpeg.P"s"  *  ( lpeg.P"i"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"v"  *  ( lpeg.P"o"  *  ( lpeg.P"l"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"l"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )^1)^-1 *  ( Type  *  ( InitDeclList  *  ( lpeg.P";"  *  _  ) ) ) + (( ( Annotation  )  +  ( lpeg.P"p"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"v"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  +  ( lpeg.P"a"  *  ( lpeg.P"b"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )  +  ( lpeg.P"f"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"y"  *  ( lpeg.P"n"  *  ( lpeg.P"c"  *  ( lpeg.P"h"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"n"  *  ( lpeg.P"i"  *  ( lpeg.P"z"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"v"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"f"  *  ( lpeg.P"p"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )^1)^-1 *  ( (TypeParameters  *  Annotations ^-1)^-1 *  ( TypeOrVoid  *  ( Identifier  *  ( lpeg.P"("  *  ( _  *  ( MethodParamList  *  ( lpeg.P")"  *  ( _  *  ( Throws ^-1 *  (  ( Block  )  +  ( lpeg.P";"  *  _  )  ) ) ) ) ) ) ) ) ) ) + ClassDeclaration  + InterfaceDeclaration  + lpeg.P";"  *  _  + Block  + lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  Block  ) ) ) ) ) ) ) + (( ( Annotation  )  +  ( lpeg.P"p"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"v"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )^1)^-1 *  ( ReferenceType  *  ( lpeg.P"("  *  ( _  *  ( MethodParamList  *  ( lpeg.P")"  *  ( _  *  ( Throws ^-1 *  ( lpeg.P"{"  *  ( _  *  ( ( ( TypeArguments ^-1 *  ( This  *  ( lpeg.P"("  *  ( _  *  ( addArgumentExpressionList ^-1 *  ( lpeg.P")"  *  ( _  *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) )  +  ( TypeArguments ^-1 *  ( Super  *  ( lpeg.P"("  *  ( _  *  ( addArgumentExpressionList ^-1 *  ( lpeg.P")"  *  ( _  *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) )  +  ( PostfixExpression  *  ( lpeg.P"."  *  ( -(lpeg.P"." ) *  ( _  *  ( TypeArguments ^-1 *  ( Super  *  ( lpeg.P"("  *  ( _  *  ( addArgumentExpressionList ^-1 *  ( lpeg.P")"  *  ( _  *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) ) ) ) ) )^-1 *  ( BlockStatement ^0 *  ( lpeg.P"}"  *  _  ) ) ) ) ) ) ) ) ) ) ) );
      TypeOrVoid = Type  + lpeg.P"v"  *  ( lpeg.P"o"  *  ( lpeg.P"i"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) );
      Throws = lpeg.P"t"  *  ( lpeg.P"h"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"w"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ClassOrInterfaceTypes  ) ) ) ) ) ) );
      InterfaceDeclaration = InterfaceModifiers ^-1 *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( lpeg.P"f"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Identifier  *  ( TypeParameters ^-1 *  ( (lpeg.P"e"  *  ( lpeg.P"x"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"n"  *  ( lpeg.P"d"  *  ( lpeg.P"s"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ClassOrInterfaceTypes  ) ) ) ) ) ) ) ))^-1 *  ( lpeg.P"{"  *  ( _  *  ( ( ( ConstantDeclaration  )  +  ( (( ( Annotation  )  +  ( lpeg.P"p"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"a"  *  ( lpeg.P"b"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )  +  ( lpeg.P"d"  *  ( lpeg.P"e"  *  ( lpeg.P"f"  *  ( lpeg.P"a"  *  ( lpeg.P"u"  *  ( lpeg.P"l"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"f"  *  ( lpeg.P"p"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )^1)^-1 *  ( (TypeParameters  *  Annotations ^-1)^-1 *  ( TypeOrVoid  *  ( Identifier  *  ( lpeg.P"("  *  ( _  *  ( MethodParamList  *  ( lpeg.P")"  *  ( _  *  ( Throws ^-1 *  (  ( Block  )  +  ( lpeg.P";"  *  _  )  ) ) ) ) ) ) ) ) ) ) )  +  ( ClassDeclaration  )  +  ( InterfaceDeclaration  )  +  ( lpeg.P";"  *  _  ) )^0 *  ( lpeg.P"}"  *  _  ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) + InterfaceModifiers ^-1 *  ( lpeg.P"@"  *  ( _  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"r"  *  ( lpeg.P"f"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ( Identifier  *  ( lpeg.P"{"  *  ( _  *  ( ( ( (( ( Annotation  )  +  ( lpeg.P"p"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"a"  *  ( lpeg.P"b"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )^1)^-1 *  ( Type  *  ( Identifier  *  ( lpeg.P"("  *  ( _  *  ( lpeg.P")"  *  ( _  *  ( (lpeg.P"d"  *  ( lpeg.P"e"  *  ( lpeg.P"f"  *  ( lpeg.P"a"  *  ( lpeg.P"u"  *  ( lpeg.P"l"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  ( _  *  ElementValue  ) ) ) ) ) ) ) ))^-1 *  ( lpeg.P";"  *  _  ) ) ) ) ) ) ) ) )  +  ( ConstantDeclaration  )  +  ( ClassDeclaration  )  +  ( InterfaceDeclaration  )  +  ( lpeg.P";"  *  _  ) )^0 *  ( lpeg.P"}"  *  _  ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) );
      InterfaceModifiers = ( ( Annotation  )  +  ( lpeg.P"p"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"o"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( lpeg.P"d"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )  +  ( lpeg.P"p"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"v"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"e"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )  +  ( lpeg.P"a"  *  ( lpeg.P"b"  *  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"a"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"r"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( lpeg.P"t"  *  ( lpeg.P"f"  *  ( lpeg.P"p"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) ) ) )^1;
      ConstantDeclaration = (( ( Annotation  )  +  ( lpeg.P"p"  *  ( lpeg.P"u"  *  ( lpeg.P"b"  *  ( lpeg.P"l"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) )  +  ( lpeg.P"f"  *  ( lpeg.P"i"  *  ( lpeg.P"n"  *  ( lpeg.P"a"  *  ( lpeg.P"l"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) )  +  ( lpeg.P"s"  *  ( lpeg.P"t"  *  ( lpeg.P"a"  *  ( lpeg.P"t"  *  ( lpeg.P"i"  *  ( lpeg.P"c"  *  ( -(lpeg.P"$" + lpeg.R("\48\57") + lpeg.R("\65\90") + lpeg.P"_" + lpeg.R("\97\122") ) *  _  ) ) ) ) ) ) ) )^1)^-1 *  ( Type  *  ( InitDeclList  *  ( lpeg.P";"  *  _  ) ) );
      addArgumentExpressionList = Expression  *  (lpeg.P","  *  ( _  *  Expression  ))^0;
      addEnumeratorList = Enumerator  *  (lpeg.P","  *  ( _  *  Enumerator  ))^0;
      Enumerator = Annotations ^-1 *  ( Identifier  *  ( ArgumentExpressionList  *  ClassBody ^-1 ) ) + Annotations ^-1 *  ( Identifier  *  ClassBody  ) + Annotations ^-1 *  Identifier ;
      ArgumentExpressionList = lpeg.P"("  *  ( _  *  ( addArgumentExpressionList ^-1 *  ( lpeg.P")"  *  _  ) ) );
      NonArrayType = ClassOrInterfaceType  + PrimitiveType ;
}

function evalExp (s)
   latency = -1.0
   for i = 0, 5 do
      local t1 = os.clock()
      local t = lpeg.match(G, s)
      local e1 = os.clock() - t1
      -- print("elapsedTime: ", e1)
      if latency == -1.0 or latency > e1 then
        latency = e1
      end
      if not t then return -1 end
      if (string.len(s) > t) then return -2 end
   end
   return (latency * 1000.0)
end

fileName = arg[1]
fh, msg = io.open(fileName, "r")
if fh then
   data = fh:read("*a")
else
   print(msg)
end
latency = evalExp(data)
if latency == -1 then
  print(fileName..", syntax error")
elseif latency == -2 then
  print(fileName..", unconsume")
else
  print(fileName..", "..latency)
end
